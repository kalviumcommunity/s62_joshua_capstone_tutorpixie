// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userStatus {
  Active
  Discontinued
  Paused
}

model user {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  name       String?
  userStatus userStatus? @default(Active)
  role       String?
  address    Json?
  phone      Int?
  Student    Student?
  Tutor      Tutor?
  createdAt  DateTime    @default(now())
}

model Student {
  userId        Int            @id
  grade         String?
  subjects      String[]
  parentDetails Json?
  fee           Int?
  currency      String?        @default("USD")
  tutorStudents TutorStudent[]
  user          user           @relation(fields: [userId], references: [id])
  sessions      Session[]      @relation("StudentSessions")
}

model Tutor {
  userId         Int            @id
  grades         String[]
  subjects       String[]
  qualifications String?
  tutorStudents  TutorStudent[]
  user           user           @relation(fields: [userId], references: [id])
  sessions       Session[]      @relation("TutorSessions")
}

model TutorStudent {
  id        Int      @id @default(autoincrement())
  tutorId   Int
  studentId Int
  subject   String
  createdAt DateTime @default(now())

  tutor   Tutor   @relation(fields: [tutorId], references: [userId])
  student Student @relation(fields: [studentId], references: [userId])

  @@unique([tutorId, studentId, subject])
}

enum status {
  Pending
  Confirmed
  Cancelled
  Ongoing
  Completed
}

model Session {
  id        Int      @id @default(autoincrement())
  subject   String
  tutorId   Int
  studentId Int
  start     DateTime
  end       DateTime
  meetlink  String?
  status    status   @default(Pending)

  tutor   Tutor   @relation("TutorSessions", fields: [tutorId], references: [userId])
  student Student @relation("StudentSessions", fields: [studentId], references: [userId])

  @@unique([tutorId, start, end])
  @@unique([studentId, start, end])
}
